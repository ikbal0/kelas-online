import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import clientPromise from '../lib/mongodb'
import { getSession, useSession, signIn } from "next-auth/react"
import Link from 'next/link'
import AppNavbar from '../lib/components/AppNavbar'
import img from '../public/assets/pic/bg/bgIndex.png'

export default function Home({isConnected}) {
  const { data: session } = useSession()

  function Content(){
    return <>
      <h1 style={{color: 'white'}}>{!session ? 'Hello': <a style={{color: 'white'}}>{'Welcome ' + session.user.email}</a>}</h1>

      {isConnected ? (
        <h2 style={{color: 'white'}} className="subtitle">You are connected to MongoDB</h2>
      ) : (
        <h2 style={{color: 'white'}} className="subtitle">
          You are NOT connected to MongoDB. Check the <code>README.md</code>{' '}
          for instructions.
        </h2>
      )}

      <div className='row pt-2'>
        <div className='col-auto'>
          <h1>{!session ? 
          <button 
          onClick={() => signIn()} 
          className={styles.button49} 
          type="submit"
          >Sign in
          </button>
          : <Link 
          href={'/staff'}>
            <button className={styles.button49}>Dashboard</button></Link>}</h1>
        </div>
        <div className='col'>
          <h3 style={{color: 'white', paddingTop: '9px'}}>{"--->"}</h3>
        </div>
      </div>
      <br/>
      <h4 style={{color: 'white'}} className="subtitle">
        Use <code>admin@email.com</code> as email and <code>admin</code> as password to login to staff dashboard. Check the <code>README.md</code>{' '}
        for more instructions.
      </h4>
    </>
  }

  function List(){
    return (
      <>
      <div className='row pt-5' style={{color: 'white'}}>
        <p>REST API with Express Js</p>
        <div className='col'>
          <p>visit my repository</p>
        </div>
        <div className='col-auto text-end'>
        {// eslint-disable-next-line react/no-unescaped-entities
        <div id="emailHelp" className="form-text"><a className={styles.link} href='https://github.com/ikbal0/my-product/' target="_blank" rel="noreferrer">https://github.com/ikbal0/my-product/</a></div> }
        </div>
        <hr/>
      </div>
      <div className='row' style={{color: 'white'}}>
        <p>Email handling using Nodemailer</p>
        <div className='col'>
          <p>visit my repository</p>
        </div>
        <div className='col-auto'>
          <div id="emailHelp" className="form-text"><a className={styles.link} href='https://github.com/ikbal0/email-contact-app/' target="_blank" rel="noreferrer">https://github.com/ikbal0/email-contact-app/</a></div>
        </div>
        <hr/>
      </div>
      </>
    )
  }

  function Footer(){
    return <>
    <footer className={styles.footer}>
      <Link href={'/about'}><a style={{color: 'blue', textDecoration: 'none'}}>Ikbal Yaduar</a></Link>
    </footer>
    <footer className={styles.footer}>
      <a
        href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
        target="_blank"
        rel="noopener noreferrer"
        style={{textDecoration: 'none'}}
      >
        Powered by{' '}
        <span className={styles.logo}>
          <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
        </span>
      </a>
    </footer>
    </>
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Kelas-online</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppNavbar />

      <main className={styles.main}>
        <div className='container'>
          <div className='row'>
            <div className='col-sm-12 col-md-5'>
              <Content/>
              <List/>
            </div>
            <div className='col-sm-12 col-md-7'>
              <Image src={img} placeholder='blur' alt='pic'/>
            </div>
          </div>
        </div>
      </main>

      <Footer/>
    </div>
  )
}

export async function getServerSideProps(context) {
  const session = await getSession(context)

  try {
    await clientPromise

    return {
      props: { isConnected: true },
    }
  } catch (e) {
    console.error(e)
    return {
      props: { isConnected: false },
    }
  }
}